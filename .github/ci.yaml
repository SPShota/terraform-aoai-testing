name: CI

permissions:
  contents: read
  checks: read
  pull-requests: read

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, closed]

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  AIOI_LOCATION: "${{ secrets.AIOI_LOCATION }}"
  AIOI_RESOURCE_GROUP_NAME: "${{ secrets.AIOI_RESOURCE_GROUP_NAME }}"
  AIOI_SUBDOMAIN_NAME: "${{ secrets.AIOI_SUBDOMAIN_NAME }}"


permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_wrapper: false

      - name: Check format
        run: terraform fmt -check -recursive

      - name: Init
        run: |
          terraform init -no-color  -backend-config="storage_account_name=${{ env.BLOB_STORAGE_ACCOUNT_NAME }}" \
                                    -backend-config="container_name=${{ env.BLOB_STORAGE_CONTAINER_NAME }}" \
                                    -backend-config="key=terraform.tfstate"
        env:
          BLOB_STORAGE_ACCOUNT_NAME: ${{ secrets.BLOB_STORAGE_ACCOUNT_NAME }}
          BLOB_STORAGE_CONTAINER_NAME: ${{ secrets.BLOB_STORAGE_CONTAINER_NAME }}

      - name: Test
        run: |
          terraform test  -var app_name="terraform-aoai-testing" \
                          -var location="${{ env.AIOI_LOCATION }}" \
                          -var resource_group_name="${{ env.AIOI_RESOURCE_GROUP_NAME }}" \
                          -var subdomain_name="${{ env.AIOI_SUBDOMAIN_NAME }}" \
                          -var subscription_id="${{ env.ARM_SUBSCRIPTION_ID }}"
      - name: Plan
        id: plan
        run: |
          terraform plan -no-color  -var app_name="terraform-aoai-testing" \
                                    -var location="${{ env.AIOI_LOCATION }}" \
                                    -var resource_group_name="${{ env.AIOI_RESOURCE_GROUP_NAME }}" \
                                    -var subdomain_name="${{ env.AIOI_SUBDOMAIN_NAME }}" \
                                    -var subscription_id="${{ env.ARM_SUBSCRIPTION_ID }}" \
                                    -out "plan.out"

      - name: Check validate
        run: terraform validate

      - name: Apply
        if: ${{ github.event.pull_request.merged == true}}
        run: terraform apply -auto-approve -no-color "plan.out"